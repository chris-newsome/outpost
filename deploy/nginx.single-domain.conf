# Nginx site config for single-domain deployment
# Serves static frontend and reverse-proxies API and WebSockets

server {
    listen 80;
    server_name example.com;

    # Adjust to where you deploy the built frontend
    root /var/www/famlio;
    index index.html;

    # Allow document uploads up to 20MB (matches backend limit)
    client_max_body_size 20m;

    # Proxy API to local backend
    location ^~ /api/ {
        proxy_pass http://127.0.0.1:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
    }

    # Proxy SignalR/WebSocket hub
    location ^~ /hubs/ {
        proxy_pass http://127.0.0.1:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
    }

    # Cache static assets; HTML minimally
    location ~* \.(?:css|js|png|jpg|jpeg|gif|svg|ico|webp)$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
        try_files $uri =404;
    }

    # Service worker should not be cached aggressively
    location = /service-worker.js {
        add_header Cache-Control "no-cache";
        try_files $uri /service-worker.js =404;
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }
}

# For TLS, consider using Certbot:
#   sudo certbot --nginx -d example.com
# Or include a separate server block listening on 443 with ssl_certificate settings.

